package configs

import (
    "github.com/dumpplane/template-controller/internal/configs/nginx"
)


func GenerateNginxMainConfig(staticCfgParams *StaticConfigParams, config *ConfigParams) *nginx.MainConfig {
	nginxCfg := &nginx.MainConfig{
		AccessLogOff:                       config.MainAccessLogOff,
		DefaultServerAccessLogOff:          config.DefaultServerAccessLogOff,
		DefaultServerReturn:                config.DefaultServerReturn,
		DisableIPV6:                        staticCfgParams.DisableIPV6,
		DefaultHTTPListenerPort:            staticCfgParams.DefaultHTTPListenerPort,
		DefaultHTTPSListenerPort:           staticCfgParams.DefaultHTTPSListenerPort,
		ErrorLogLevel:                      config.MainErrorLogLevel,
		HealthStatus:                       staticCfgParams.HealthStatus,
		HealthStatusURI:                    staticCfgParams.HealthStatusURI,
		HTTP2:                              config.HTTP2,
		HTTPSnippets:                       config.MainHTTPSnippets,
		KeepaliveRequests:                  config.MainKeepaliveRequests,
		KeepaliveTimeout:                   config.MainKeepaliveTimeout,
		LogFormat:                          config.MainLogFormat,
		LogFormatEscaping:                  config.MainLogFormatEscaping,
		MainSnippets:                       config.MainMainSnippets,
		NginxStatus:                        staticCfgParams.NginxStatus,
		NginxStatusAllowCIDRs:              staticCfgParams.NginxStatusAllowCIDRs,
		NginxStatusPort:                    staticCfgParams.NginxStatusPort,
		OpenTracingEnabled:                 config.MainOpenTracingEnabled,
		OpenTracingLoadModule:              config.MainOpenTracingLoadModule,
		OpenTracingTracer:                  config.MainOpenTracingTracer,
		OpenTracingTracerConfig:            config.MainOpenTracingTracerConfig,
		ProxyProtocol:                      config.ProxyProtocol,
		ResolverAddresses:                  config.ResolverAddresses,
		ResolverIPV6:                       config.ResolverIPV6,
		ResolverTimeout:                    config.ResolverTimeout,
		ResolverValid:                      config.ResolverValid,
		RealIPHeader:                       config.RealIPHeader,
		RealIPRecursive:                    config.RealIPRecursive,
		SetRealIPFrom:                      config.SetRealIPFrom,
		ServerNamesHashBucketSize:          config.MainServerNamesHashBucketSize,
		ServerNamesHashMaxSize:             config.MainServerNamesHashMaxSize,
		MapHashBucketSize:                  config.MainMapHashBucketSize,
		MapHashMaxSize:                     config.MainMapHashMaxSize,
		ServerTokens:                       config.ServerTokens,
		SSLCiphers:                         config.MainServerSSLCiphers,
		SSLDHParam:                         config.MainServerSSLDHParam,
		SSLPreferServerCiphers:             config.MainServerSSLPreferServerCiphers,
		SSLProtocols:                       config.MainServerSSLProtocols,
		SSLRejectHandshake:                 staticCfgParams.SSLRejectHandshake,
		TLSPassthrough:                     staticCfgParams.TLSPassthrough,
		TLSPassthroughPort:                 staticCfgParams.TLSPassthroughPort,
		StreamLogFormat:                    config.MainStreamLogFormat,
		StreamLogFormatEscaping:            config.MainStreamLogFormatEscaping,
		StreamSnippets:                     config.MainStreamSnippets,
		StubStatusOverUnixSocketForOSS:     staticCfgParams.StubStatusOverUnixSocketForOSS,
		WorkerCPUAffinity:                  config.MainWorkerCPUAffinity,
		WorkerProcesses:                    config.MainWorkerProcesses,
		WorkerShutdownTimeout:              config.MainWorkerShutdownTimeout,
		WorkerConnections:                  config.MainWorkerConnections,
		WorkerRlimitNofile:                 config.MainWorkerRlimitNofile,
		VariablesHashBucketSize:            config.VariablesHashBucketSize,
		VariablesHashMaxSize:               config.VariablesHashMaxSize,
		AppProtectLoadModule:               staticCfgParams.MainAppProtectLoadModule,
		AppProtectDosLoadModule:            staticCfgParams.MainAppProtectDosLoadModule,
		AppProtectFailureModeAction:        config.MainAppProtectFailureModeAction,
		AppProtectCompressedRequestsAction: config.MainAppProtectCompressedRequestsAction,
		AppProtectCookieSeed:               config.MainAppProtectCookieSeed,
		AppProtectCPUThresholds:            config.MainAppProtectCPUThresholds,
		AppProtectPhysicalMemoryThresholds: config.MainAppProtectPhysicalMemoryThresholds,
		AppProtectReconnectPeriod:          config.MainAppProtectReconnectPeriod,
		AppProtectDosLogFormat:             config.MainAppProtectDosLogFormat,
		AppProtectDosLogFormatEscaping:     config.MainAppProtectDosLogFormatEscaping,
		AppProtectDosArbFqdn:               config.MainAppProtectDosArbFqdn,
		InternalRouteServer:                staticCfgParams.EnableInternalRoutes,
		InternalRouteServerName:            staticCfgParams.InternalRouteServerName,
		LatencyMetrics:                     staticCfgParams.EnableLatencyMetrics,
		OIDC:                               staticCfgParams.EnableOIDC,
	}
	return nginxCfg
}
